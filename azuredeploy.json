{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "12011702515099243905"
    }
  },
  "parameters": {
    "webAppName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "S1",
        "S2",
        "S3",
        "B1"
      ]
    },
    "runtime": {
      "type": "string",
      "defaultValue": "NODE|16-lts",
      "allowedValues": [
        "NODE|16-lts",
        "DOTNETCORE|3.0"
      ]
    },
    "deployGw": {
      "type": "bool",
      "defaultValue": false
    },
    "deployCosmos": {
      "type": "bool",
      "defaultValue": true
    },
    "defaultConsistencyLevel": {
      "type": "string",
      "defaultValue": "ConsistentPrefix"
    },
    "isZoneRedundant": {
      "type": "bool",
      "defaultValue": false
    },
    "enableAutomaticFailover": {
      "type": "bool",
      "defaultValue": false
    },
    "enableFreeTier": {
      "type": "bool",
      "defaultValue": true
    },
    "appGwSku": {
      "type": "string",
      "defaultValue": "Standard_v2"
    },
    "gwCapacity": {
      "type": "int",
      "defaultValue": 2
    },
    "enableHttp2": {
      "type": "bool",
      "defaultValue": false
    },
    "cosmosDbName": {
      "type": "string",
      "defaultValue": "[format('{0}-db-{1}', parameters('webAppName'), uniqueString(resourceGroup().id))]"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet001"
    },
    "appGwName": {
      "type": "string",
      "defaultValue": "[format('{0}-appGw', parameters('webAppName'))]"
    }
  },
  "functions": [],
  "variables": {
    "appServicePlanName": "[format('plan-{0}', uniqueString(resourceGroup().id))]",
    "appgw_id": "[resourceId('Microsoft.Network/applicationGateways', parameters('appGwName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "properties": {
        "reserved": true
      },
      "sku": {
        "name": "[parameters('skuName')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('insights-{0}', parameters('webAppName'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "ipSecurityRestrictions": "[if(parameters('deployGw'), createArray(createObject('ipAddress', format('{0}/32', reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-PIP', parameters('webAppName')))).ipAddress))), json('null'))]",
          "linuxFxVersion": "[parameters('runtime')]",
          "appSettings": "[if(parameters('deployCosmos'), createArray(createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Insights/components', format('insights-{0}', parameters('webAppName')))).InstrumentationKey), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', reference(resourceId('Microsoft.Insights/components', format('insights-{0}', parameters('webAppName')))).ConnectionString), createObject('name', 'DOCUMENTDB_ENDPOINT', 'value', reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))).documentEndpoint), createObject('name', 'DOCUMENTDB_PRIMARY_KEY', 'value', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName')), '2021-11-15-preview').primaryMasterKey)), createArray(createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Insights/components', format('insights-{0}', parameters('webAppName')))).InstrumentationKey), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', reference(resourceId('Microsoft.Insights/components', format('insights-{0}', parameters('webAppName')))).ConnectionString)))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('insights-{0}', parameters('webAppName')))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-PIP', parameters('webAppName')))]"
      ]
    },
    {
      "condition": "[parameters('deployCosmos')]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-11-15-preview",
      "name": "[parameters('cosmosDbName')]",
      "location": "[parameters('location')]",
      "properties": {
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": "[parameters('isZoneRedundant')]"
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": "[parameters('enableAutomaticFailover')]",
        "enableFreeTier": "[parameters('enableFreeTier')]",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "[parameters('defaultConsistencyLevel')]"
        }
      }
    },
    {
      "condition": "[parameters('deployGw')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "192.168.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "192.168.1.0/24"
            }
          },
          {
            "name": "appGWSubnet",
            "properties": {
              "addressPrefix": "192.168.2.0/24"
            }
          }
        ]
      }
    },
    {
      "condition": "[parameters('deployGw')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}-PIP', parameters('webAppName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "condition": "[parameters('deployGw')]",
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2021-05-01",
      "name": "[parameters('appGwName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('appGwSku')]",
          "tier": "[parameters('appGwSku')]",
          "capacity": "[parameters('gwCapacity')]"
        },
        "enableHttp2": "[parameters('enableHttp2')]",
        "backendAddressPools": [
          {
            "name": "webApp-pool",
            "properties": {
              "backendAddresses": [
                {
                  "fqdn": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName'))).hostNames[0]]"
                }
              ]
            }
          }
        ],
        "gatewayIPConfigurations": [
          {
            "name": "gatewayIPConfig",
            "properties": {
              "subnet": {
                "id": "[if(parameters('deployGw'), reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[1].id, json('null'))]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "frontend-config",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-PIP', parameters('webAppName')))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port_80",
            "properties": {
              "port": 80
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "backendHTTPsetting",
            "properties": {
              "pickHostNameFromBackendAddress": true,
              "port": 80,
              "protocol": "Http"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "httpListeners",
            "properties": {
              "protocol": "Http",
              "frontendIPConfiguration": {
                "id": "[format('{0}/frontendIPConfigurations/frontend-config', variables('appgw_id'))]"
              },
              "frontendPort": {
                "id": "[format('{0}/frontendPorts/port_80', variables('appgw_id'))]"
              }
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "routingRule01",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[format('{0}/httpListeners/httpListeners', variables('appgw_id'))]"
              },
              "backendAddressPool": {
                "id": "[format('{0}/backendAddressPools/webApp-pool', variables('appgw_id'))]"
              },
              "backendHttpSettings": {
                "id": "[format('{0}/backendHttpSettingsCollection/backendHTTPsetting', variables('appgw_id'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-PIP', parameters('webAppName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ]
    }
  ]
}